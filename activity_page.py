import streamlit as st
from google.cloud import bigquery
from datetime import datetime
from data_fetcher import get_user_workouts, get_user_profile



def insert_post(user_id, content, timestamp=None, image_url=None):
    project_id = "vivianaramos6techx25"
    dataset_id = "ISE"
    table_id = f"{project_id}.{dataset_id}.Posts"

    client = bigquery.Client(project=project_id)

    if timestamp is None:
        timestamp = datetime.now()

    row = {
        "AuthorId": user_id,
        "Timestamp": timestamp.strftime("%Y-%m-%d %H:%M:%S"),
        "Content": content,
        "ImageUrl": image_url if image_url else None
    }

    errors = client.insert_rows_json(table_id, [row])
    if errors:
        raise RuntimeError(f"Failed to insert post: {errors}")
    else:
        print("Post inserted:", row)

def activity_page(user_id):
    #This function was generated by ChatGPT
    st.title("🏃‍♀️ Your Activity")

    # --- Get Workouts ---
    workouts = get_user_workouts(user_id)
    recent_workouts = workouts[:3]

    st.subheader("🕓 Recent Workouts")
    if recent_workouts:
        for w in recent_workouts:
            st.markdown(f"**{w['start_timestamp']}** — {w['distance']} km, {w['steps']} steps, {w['calories_burned']} kcal")
    else:
        st.info("No workouts found.")

    # --- Activity Summary ---
    st.subheader("📊 Activity Summary")
    total_steps = sum(w["steps"] for w in workouts)
    total_calories = sum(w["calories_burned"] for w in workouts)
    total_distance = sum(w["distance"] for w in workouts)

    col1, col2, col3 = st.columns(3)
    col1.metric("Steps", f"{total_steps:,}")
    col2.metric("Calories", f"{total_calories:,} kcal")
    col3.metric("Distance", f"{total_distance:.2f} km")

    # --- Share with Community ---
    st.subheader("📣 Share Your Progress")
    stat = st.selectbox("What stat do you want to share?", ["Steps", "Calories", "Distance"])
    if st.button("Share with the Community"):
        if stat == "Steps":
            message = f"Look at this, I walked {total_steps:,} steps today!"
        elif stat == "Calories":
            message = f"I burned {total_calories:,} calories today! 🔥"
        else:
            message = f"I covered {total_distance:.2f} km today! 🏃‍♂️"

        insert_post(user_id, message, datetime.now())
        st.success("✅ Shared successfully!")

# For standalone testing
if __name__ == "__main__":
    activity_page("user1")