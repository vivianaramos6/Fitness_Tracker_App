# This workflow will build and deploy using Cloud Run.

name: Cloud Run Continuous Deployment

on:
  push:
    # TODO: change 'none' to 'main' to enable the workflow to run
    branches: 'none'
  release:
    types: [published]

env:
  PROJECT_ID: '' # TODO: update to your Google Cloud project ID
  SERVICE_NAME: '' # TODO: update to your service name (name of your team's webapp!)
  SERVICE_REGION: 'us-central1'
  SERVICE_ACCOUNT: '' # TODO: update to your Cloud service account
  WORKLOAD_IDENTITY_PROVIDER: '' #TODO: update to your workload identity provider

jobs:
  py-checks:
    uses: ./.github/workflows/python-checks.yml
    
  build-deploy:
    name: 'Build and deploy using Cloud Run'
    runs-on: ubuntu-latest
    needs: py-checks

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: 'actions/checkout@v4'
    # Authorize GitHub to connect to your service account
    - uses: 'google-github-actions/auth@v2'
      with:
        project_id: '${{ env.PROJECT_ID }}'
        workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER}}'
        service_account: '${{ env.SERVICE_ACCOUNT }}'
    
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        project_id: '${{ env.PROJECT_ID }}'
        version: '>= 363.0.0'

    - name: 'Configure docker for GCP'
      run: 'gcloud auth configure-docker'

    - name: 'Build and push Docker image'
      uses: 'docker/build-push-action@v5'
      with:
        context: .
        push: true
        tags: 'gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}'

    - id: 'Deploy'
      uses: 'google-github-actions/deploy-cloudrun@v2'
      with:
        service: '${{ env.SERVICE_NAME }}'
        image: 'gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest'
        region: '${{ env.SERVICE_REGION }}'

    - name: 'Display deployed app URL'
      run: 'curl "${{ steps.deploy.outputs.url }}"'
